esphome:
  name: battery

esp8266:
  board: nodemcu

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

wifi:
  ssid: "ranch"
  password: !secret WifiPassword

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Battery Fallback Hotspot"
    password: "BcmUJnZZawL0"

captive_portal:


font:
  # - file: "fonts/Comic Sans MS.ttf"
  #   id: my_font
  #   size: 20

  # gfonts://family[@weight]
  - file: "gfonts://Roboto"
    id: myfont
    size: 18
  - file: "gfonts://Roboto"
    id: font_level
    size: 24

i2c:
  sda: GPIO4
  scl: GPIO5
  frequency: 800kHz

# number:
#   - id: counter
#     initial_value: 0

display:
  - platform: ssd1306_i2c
    id: oled
    model: "SSD1306 128x32"
    update_interval: 1s
    pages:
      # - id: page_start
      #   lambda: |-
      #     it.print("Counter:", counter.state)
      #     //it.print(0, 0, id(roboto), "Start");
      #     //it.print("Time:", time.now().time_of_day().to_string())
      #     //it.printf(0, 30, id(opensans_14), "CO2: %.0f ppm", id(co2).state);

      - id: page1
        lambda: |-
          int x_max = 80;
          it.rectangle(0, 0, x_max, 32);
          it.filled_rectangle(0, 0, id(battery_level)*x_max/100, 32);
          it.printf(x_max+3, 0, id(font_level), "%d%%", min(99,id(battery_level)));
      - id: page2
        lambda: |-
          //it.rectangle(0, 0, 128, 32);
          //it.rectangle(0, 0, 128, 16);
          //it.printf(1, 0, id(myfont), "Vcc=%2.3fV", id(vcc).state);
          it.printf(0, 0, id(myfont), "spegnimento...");

interval:
  - interval: 1s
    then:
      - lambda: |-
          id(battery_level) -= 10;
          if (id(battery_level) < 1) {
            id(battery_level) = 100;
            id(oled).show_page(id(page2));

          }
  # - interval: 3s
  #   then:
  #     - display.page.show_next: oled
  #     - component.update: oled


binary_sensor:
  - platform: status
    name: "Node Status"
    id: system_status


globals:
   - id: battery_level
     type: int
     restore_value: no
     initial_value: '100'




sensor:
  - platform: adc
    pin: VCC
    name: $devicename VCC Voltage
    id: vcc
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    update_interval: 15s
    id: sstrength
  - platform: uptime
    name: Uptime Sensor
    id: upt